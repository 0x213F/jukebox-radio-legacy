# Generated by Django 2.2.5 on 2019-11-30 18:24

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('art', models.URLField(max_length=256)),
                ('title', models.CharField(max_length=128)),
                ('release_date', models.DateField()),
                ('spotify_uri', models.CharField(max_length=36)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('played_at', models.DateTimeField(null=True)),
                ('is_playing', models.BooleanField(default=False)),
                ('value', models.PositiveIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Showing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('showtime_actual', models.DateTimeField(null=True)),
                ('showtime_scheduled', models.DateTimeField()),
                ('status', models.CharField(default='scheduled', max_length=128)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('album', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='albums', to='music.Album')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.PositiveIntegerField()),
                ('spotify_uri', models.CharField(max_length=36)),
                ('spotify_name', models.CharField(max_length=64)),
                ('spotify_duration_ms', models.PositiveIntegerField()),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='tracks', to='music.Record')),
            ],
            options={
                'abstract': False,
                'unique_together': {('record', 'value', 'spotify_uri')},
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_administrator', models.BooleanField(default=False)),
                ('timestamp_join', models.DateTimeField(auto_now_add=True)),
                ('timestamp_last_active', models.DateTimeField(auto_now_add=True)),
                ('display_name', models.CharField(editable=False, max_length=32)),
                ('display_uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('holder', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='tickets', to=settings.AUTH_USER_MODEL)),
                ('showing', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='tickets', to='music.Showing')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='record',
            name='showing',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='records', to='music.Showing'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('status', models.CharField(choices=[('joined', 'Joined'), ('waited', 'Waited'), ('left', 'Left'), ('activated', 'Activated'), ('completed', 'Completed'), ('terminated', 'Terminated'), ('low', ':('), ('mid_low', ':/'), ('neutral', ':|'), ('mid_high', ':)'), ('high', ':D'), ('play', 'Played'), ('pause', 'Paused'), ('neutral', 'Neutral'), ('next', 'Skipped'), ('prev', 'Backtracked')], max_length=12)),
                ('text', models.TextField(blank=True, null=True)),
                ('commenter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='comments', to=settings.AUTH_USER_MODEL)),
                ('commenter_ticket', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='commenter_tickets', to='music.Ticket')),
                ('showing', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='comments', to='music.Showing')),
                ('track', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='comments', to='music.Track')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=128)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='artist', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='album',
            name='artist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='albums', to='music.Artist'),
        ),
        migrations.AlterUniqueTogether(
            name='record',
            unique_together={('showing', 'value')},
        ),
    ]
